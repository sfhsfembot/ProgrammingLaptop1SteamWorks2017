// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc692.ProgrammingLaptop1Steamworks2017.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc692.ProgrammingLaptop1Steamworks2017.Robot;

/**
 *
 */
public class TopLimitSwitch extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TopLimitSwitch() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.dumpTruck);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
//    	Robot.dumpTruck.screwUp();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(Robot.dumpTruck.lowerLimitSwitch())
    	{
    		Robot.dumpTruck.screwUp();
    		Robot.dumpTruck.setDumpTruckMovingUp();
    		System.out.println("top limit switch activated");
    		System.out.println("Going up to bottom level!");
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	if(Robot.dumpTruck.upperLimitSwitch())
        {
        	System.out.println("top limit switch activated");
        	System.out.println("dumpTruck stopping!");
        	return true;
        }
        else
        {
        	return false;
        }
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.dumpTruck.stop();
    	System.out.println("dumpTruck has reached end method!");
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
     	while(Robot.dumpTruck.isMovingUp() && !Robot.dumpTruck.upperLimitSwitch())
        	{
        		Robot.dumpTruck.screwUp();
        		System.out.println("Going up to top level!");
        	}
        	end();

    }
}
